name: ch.so.afu.gretl.naturgefahren
on:
  # push:
  #   paths-ignore:
  #     - '**.md'
  #     - 'docs/**.md'
  workflow_dispatch:
    inputs:
      dataFileKey:
        description: 'data file key?'
        required: true
      directory:
        description: 'directory?'
        required: false
      fileName:
        description: 'file name?'
        required: true

jobs:  
  build:
    env:
      ORG_GRADLE_PROJECT_awsAccessKeyAgi: ${{secrets.AWS_ACCESS_KEY_ID}}
      ORG_GRADLE_PROJECT_awsSecretAccessKeyAgi: ${{secrets.AWS_SECRET_ACCESS_KEY}}

    runs-on: ubuntu-latest

    container:
      image: sogis/gretl:latest
      #image: sogis/gretl:2.2.379

    services:
      # Label used to access the service container
      postgis:
        image: postgis/postgis:14-3.3
        env:
          POSTGRES_PASSWORD: gretl
          POSTGRES_USER: gretl
          POSTGRES_DB: edit
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Run GRETL job
        #id: gretljob
        run: |
          gradle -b build.gradle --init-script /home/gradle/init.gradle --no-daemon
        env: 
          ORG_GRADLE_PROJECT_dataFileKey: ${{ github.event.inputs.dataFileKey }}
          ORG_GRADLE_PROJECT_directory: ${{ github.event.inputs.directory }}
          ORG_GRADLE_PROJECT_fileName: ${{ github.event.inputs.fileName }}

      - name: Upload results
        uses: actions/upload-artifact@v3
        with:
          name: results
          path: out-**.xtf


