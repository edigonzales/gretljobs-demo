import ch.so.agi.gretl.tasks.*

defaultTasks 'run'

def iliModelName = 'KbS_V1_5'
def dbSchema = 'kbs_sh'

tasks.register('downloadFile', S3Download) {
    accessKey = awsAccessKeyAgi
    secretKey = awsSecretAccessKeyAgi
    downloadDir = file(".")
    bucketName = "ch.so.agi.gretl.naturgefahren-dev"
    key = (directory.isEmpty()?"":(directory+"/")) + fileName
    endPoint = "https://s3.eu-central-1.amazonaws.com" 
    region = "eu-central-1"
}

tasks.register('validate', IliValidator) {
    dependsOn 'downloadFile'
    dataFiles = [fileName]
    logFile = "ilivalidator.log"
    doLast {
        println(fileName) 
    }
}

tasks.register('createSchema', Ili2pgImportSchema) {
    dependsOn 'validate'
    database = [dbUriEdit, dbUserEdit, dbPwdEdit]
    models = iliModelName
    dbschema = dbSchema
    logFile = "ili2pg_schema.log"
} 

tasks.register('importData', Ili2pgImport) {
    dependsOn 'createSchema'
    database = [dbUriEdit, dbUserEdit, dbPwdEdit]
    models = iliModelName
    dbschema = dbSchema
    dataFile = fileName
    disableValidation = true
    logFile = "ili2pg_import.log"
} 

tasks.register('exportData', Ili2pgExport) {
    dependsOn 'importData'
    database = [dbUriEdit, dbUserEdit, dbPwdEdit]
    models = iliModelName
    dbschema = dbSchema
    dataFile = "out-"+fileName
    disableValidation = true
    logFile = "ili2pg_out.log"
} 

tasks.register('run') {
    dependsOn 'exportData'
}
